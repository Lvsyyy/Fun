local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function distance(pointA, pointB)
    return (pointA - pointB).Magnitude
end

local function getNearestPlayer(players, position)
    local closestDistance = math.huge
    local closestPlayer = nil
    for _, player in pairs(players) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local playerDistance = distance(playerPosition, position)
            if playerDistance < closestDistance then
                closestDistance = playerDistance
                closestPlayer = player
            end
        end
    end
    return closestPlayer
end

local function walkRandomlyAroundPlayer(targetPlayer)
    while targetPlayer.Character and _G.Walk == true do
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
        local searchPosition = targetPosition + Vector3.new(math.random(-SEARCH_RADIUS, SEARCH_RADIUS), 0, math.random(-SEARCH_RADIUS, SEARCH_RADIUS))

        LocalPlayer.Character.Humanoid:MoveTo(searchPosition)
        LocalPlayer.Character.Humanoid.MoveToFinished:Wait()
        wait(math.random(1, WALK_COOLDOWN))
    end
end

local function onPlayerAdded(player)
    if player == LocalPlayer then
        return
    end
    player.CharacterAdded:Connect(function(character)
        wait(1)
        walkRandomlyAroundPlayer(getNearestPlayer(Players:GetPlayers(), character.HumanoidRootPart.Position))
    end)
end

Players.PlayerAdded:Connect(onPlayerAdded)

for _, player in pairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end
