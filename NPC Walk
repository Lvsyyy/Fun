local SEARCH_RADIUS = value6
local WALK_COOLDOWN = value7
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local targetPlayer = nil

local function getNearestPlayer()
    local nearestDistance = math.huge
    local nearestPlayer = nil
    for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Humanoid") and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance and distance <= SEARCH_RADIUS then
                nearestDistance = distance
                nearestPlayer = otherPlayer
            end
        end
    end
    return nearestPlayer
end

local function walkRandomlyAroundPlayer(targetPlayer)
    while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-SEARCH_RADIUS, SEARCH_RADIUS), 0, math.random(-SEARCH_RADIUS, SEARCH_RADIUS))
        humanoid:MoveTo(targetPosition)
        wait(WALK_COOLDOWN)
    end
end

while _G.Walk == true do
    wait()
    targetPlayer = getNearestPlayer()
    walkRandomlyAroundPlayer(targetPlayer)
end
